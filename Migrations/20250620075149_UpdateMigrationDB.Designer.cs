// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using olx_be_api.Data;

#nullable disable

namespace olx_be_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250620075149_UpdateMigrationDB")]
    partial class UpdateMigrationDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("olx_be_api.Models.ActiveProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiry_date");

                    b.Property<string>("FeatureType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("feature_type");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.Property<int>("RemainingQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("remaining_quantity");

                    b.HasKey("Id")
                        .HasName("p_k_active_product_features");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("i_x_active_product_features_product_id");

                    b.ToTable("active_product_features");
                });

            modelBuilder.Entity("olx_be_api.Models.AdPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationDays")
                        .HasColumnType("integer")
                        .HasColumnName("duration_days");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("p_k_ad_packages");

                    b.ToTable("ad_packages");
                });

            modelBuilder.Entity("olx_be_api.Models.AdPackageFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdPackageId")
                        .HasColumnType("integer")
                        .HasColumnName("ad_package_id");

                    b.Property<int>("DurationDays")
                        .HasColumnType("integer")
                        .HasColumnName("duration_days");

                    b.Property<string>("FeatureType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("feature_type");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("p_k_ad_package_features");

                    b.HasIndex("AdPackageId")
                        .HasDatabaseName("i_x_ad_package_features_ad_package_id");

                    b.ToTable("ad_package_features");
                });

            modelBuilder.Entity("olx_be_api.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AdPackageId")
                        .HasColumnType("integer")
                        .HasColumnName("ad_package_id");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("p_k_cart_items");

                    b.HasIndex("AdPackageId")
                        .HasDatabaseName("i_x_cart_items_ad_package_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("i_x_cart_items_product_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("i_x_cart_items_user_id");

                    b.ToTable("cart_items");
                });

            modelBuilder.Entity("olx_be_api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_categories");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("olx_be_api.Models.ChatRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("BuyerId")
                        .HasColumnType("uuid")
                        .HasColumnName("buyer_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.Property<Guid>("SellerId")
                        .HasColumnType("uuid")
                        .HasColumnName("seller_id");

                    b.HasKey("Id")
                        .HasName("p_k_chat_rooms");

                    b.HasIndex("BuyerId")
                        .HasDatabaseName("i_x_chat_rooms_buyer_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("i_x_chat_rooms_product_id");

                    b.HasIndex("SellerId")
                        .HasDatabaseName("i_x_chat_rooms_seller_id");

                    b.ToTable("chat_rooms");
                });

            modelBuilder.Entity("olx_be_api.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("integer")
                        .HasColumnName("province_id");

                    b.HasKey("Id")
                        .HasName("p_k_cities");

                    b.HasIndex("ProvinceId")
                        .HasDatabaseName("i_x_cities_province_id");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("olx_be_api.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("city_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_districts");

                    b.HasIndex("CityId")
                        .HasDatabaseName("i_x_districts_city_id");

                    b.ToTable("districts");
                });

            modelBuilder.Entity("olx_be_api.Models.EmailOtp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expired_at");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_used");

                    b.Property<string>("Otp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("otp");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("p_k_email_otps");

                    b.HasIndex("UserId")
                        .HasDatabaseName("i_x_email_otps_user_id");

                    b.ToTable("email_otps");
                });

            modelBuilder.Entity("olx_be_api.Models.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("p_k_favorites");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("i_x_favorites_product_id");

                    b.HasIndex("UserId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("i_x_favorites_user_id_product_id");

                    b.ToTable("favorites");
                });

            modelBuilder.Entity("olx_be_api.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("city_id");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("integer")
                        .HasColumnName("district_id");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("integer")
                        .HasColumnName("province_id");

                    b.HasKey("Id")
                        .HasName("p_k_locations");

                    b.HasIndex("CityId")
                        .HasDatabaseName("i_x_locations_city_id");

                    b.HasIndex("DistrictId")
                        .HasDatabaseName("i_x_locations_district_id");

                    b.HasIndex("ProvinceId")
                        .HasDatabaseName("i_x_locations_province_id");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("olx_be_api.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ChatRoomId")
                        .HasColumnType("uuid")
                        .HasColumnName("chat_room_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean")
                        .HasColumnName("is_read");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid")
                        .HasColumnName("sender_id");

                    b.HasKey("Id")
                        .HasName("p_k_messages");

                    b.HasIndex("ChatRoomId")
                        .HasDatabaseName("i_x_messages_chat_room_id");

                    b.HasIndex("SenderId")
                        .HasDatabaseName("i_x_messages_sender_id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("olx_be_api.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean")
                        .HasColumnName("is_read");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("p_k_notifications");

                    b.HasIndex("UserId")
                        .HasDatabaseName("i_x_notifications_user_id");

                    b.ToTable("notifications");
                });

            modelBuilder.Entity("olx_be_api.Models.PremiumPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("DurationDays")
                        .HasColumnType("integer")
                        .HasColumnName("duration_days");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("p_k_premium_packages");

                    b.ToTable("premium_packages");
                });

            modelBuilder.Entity("olx_be_api.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expired_at");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<bool>("IsSold")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sold");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid")
                        .HasColumnName("location_id");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("p_k_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("i_x_products_category_id");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("i_x_products_location_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("i_x_products_user_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("olx_be_api.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsCover")
                        .HasColumnType("boolean")
                        .HasColumnName("is_cover");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("p_k_product_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("i_x_product_images_product_id");

                    b.ToTable("product_images");
                });

            modelBuilder.Entity("olx_be_api.Models.Province", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id")
                        .HasName("p_k_provinces");

                    b.ToTable("provinces");
                });

            modelBuilder.Entity("olx_be_api.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_roles");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("olx_be_api.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Details")
                        .HasColumnType("text")
                        .HasColumnName("details");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("invoice_number");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("paid_at");

                    b.Property<string>("PaymentUrl")
                        .HasColumnType("text")
                        .HasColumnName("payment_url");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("reference_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("p_k_transactions");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique()
                        .HasDatabaseName("i_x_transactions_invoice_number");

                    b.HasIndex("UserId")
                        .HasDatabaseName("i_x_transactions_user_id");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("olx_be_api.Models.TransactionItemDetail", b =>
                {
                    b.Property<int>("AdPackageId")
                        .HasColumnType("integer")
                        .HasColumnName("ad_package_id");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("AdPackageId", "ProductId")
                        .HasName("p_k_transaction_item_details");

                    b.ToTable("transaction_item_details");
                });

            modelBuilder.Entity("olx_be_api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AuthProvider")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("auth_provider");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<DateTime?>("PremiumUntil")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("premium_until");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text")
                        .HasColumnName("profile_picture_url");

                    b.Property<string>("ProfileType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("profile_type");

                    b.Property<string>("ProviderUid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("provider_uid");

                    b.HasKey("Id")
                        .HasName("p_k_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("i_x_users_email");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasDatabaseName("i_x_users_phone_number");

                    b.HasIndex("ProviderUid", "AuthProvider")
                        .IsUnique()
                        .HasDatabaseName("i_x_users_provider_uid_auth_provider");

                    b.ToTable("users");
                });

            modelBuilder.Entity("olx_be_api.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId")
                        .HasName("p_k_user_roles");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("i_x_user_roles_role_id");

                    b.ToTable("user_roles");
                });

            modelBuilder.Entity("olx_be_api.Models.ActiveProductFeature", b =>
                {
                    b.HasOne("olx_be_api.Models.Product", "Product")
                        .WithMany("ActiveFeatures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_active_product_features__products_product_id");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("olx_be_api.Models.AdPackageFeature", b =>
                {
                    b.HasOne("olx_be_api.Models.AdPackage", "AdPackage")
                        .WithMany("Features")
                        .HasForeignKey("AdPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_ad_package_features_ad_packages_ad_package_id");

                    b.Navigation("AdPackage");
                });

            modelBuilder.Entity("olx_be_api.Models.CartItem", b =>
                {
                    b.HasOne("olx_be_api.Models.AdPackage", "AdPackage")
                        .WithMany()
                        .HasForeignKey("AdPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_cart_items_ad_packages_ad_package_id");

                    b.HasOne("olx_be_api.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_cart_items__products_product_id");

                    b.HasOne("olx_be_api.Models.User", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_cart_items__users_user_id");

                    b.Navigation("AdPackage");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("olx_be_api.Models.ChatRoom", b =>
                {
                    b.HasOne("olx_be_api.Models.User", "Buyer")
                        .WithMany("BuyerChatRooms")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_chat_rooms__users_buyer_id");

                    b.HasOne("olx_be_api.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_chat_rooms__products_product_id");

                    b.HasOne("olx_be_api.Models.User", "Seller")
                        .WithMany("SellerChatRooms")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_chat_rooms__users_seller_id");

                    b.Navigation("Buyer");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("olx_be_api.Models.City", b =>
                {
                    b.HasOne("olx_be_api.Models.Province", "Province")
                        .WithMany("cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_cities__provinces_province_id");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("olx_be_api.Models.District", b =>
                {
                    b.HasOne("olx_be_api.Models.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_districts_cities_city_id");

                    b.Navigation("City");
                });

            modelBuilder.Entity("olx_be_api.Models.EmailOtp", b =>
                {
                    b.HasOne("olx_be_api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired()
                        .HasConstraintName("f_k_email_otps__users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("olx_be_api.Models.Favorite", b =>
                {
                    b.HasOne("olx_be_api.Models.Product", "Product")
                        .WithMany("FavoritedBy")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_favorites__products_product_id");

                    b.HasOne("olx_be_api.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_favorites__users_user_id");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("olx_be_api.Models.Location", b =>
                {
                    b.HasOne("olx_be_api.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .HasConstraintName("f_k_locations_cities_city_id");

                    b.HasOne("olx_be_api.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("f_k_locations_districts_district_id");

                    b.HasOne("olx_be_api.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("f_k_locations__provinces_province_id");

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("olx_be_api.Models.Message", b =>
                {
                    b.HasOne("olx_be_api.Models.ChatRoom", "ChatRoom")
                        .WithMany("Messages")
                        .HasForeignKey("ChatRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_messages_chat_rooms_chat_room_id");

                    b.HasOne("olx_be_api.Models.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_messages__users_sender_id");

                    b.Navigation("ChatRoom");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("olx_be_api.Models.Notification", b =>
                {
                    b.HasOne("olx_be_api.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_notifications__users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("olx_be_api.Models.Product", b =>
                {
                    b.HasOne("olx_be_api.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("f_k_products_categories_category_id");

                    b.HasOne("olx_be_api.Models.Location", "Location")
                        .WithMany("Products")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("f_k_products_locations_location_id");

                    b.HasOne("olx_be_api.Models.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_products__users_user_id");

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("olx_be_api.Models.ProductImage", b =>
                {
                    b.HasOne("olx_be_api.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_product_images_products_product_id");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("olx_be_api.Models.Transaction", b =>
                {
                    b.HasOne("olx_be_api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_transactions__users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("olx_be_api.Models.UserRole", b =>
                {
                    b.HasOne("olx_be_api.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_user_roles_roles_role_id");

                    b.HasOne("olx_be_api.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_user_roles_users_user_id");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("olx_be_api.Models.AdPackage", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("olx_be_api.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("olx_be_api.Models.ChatRoom", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("olx_be_api.Models.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("olx_be_api.Models.Location", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("olx_be_api.Models.Product", b =>
                {
                    b.Navigation("ActiveFeatures");

                    b.Navigation("FavoritedBy");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("olx_be_api.Models.Province", b =>
                {
                    b.Navigation("cities");
                });

            modelBuilder.Entity("olx_be_api.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("olx_be_api.Models.User", b =>
                {
                    b.Navigation("BuyerChatRooms");

                    b.Navigation("CartItems");

                    b.Navigation("Favorites");

                    b.Navigation("Notifications");

                    b.Navigation("Products");

                    b.Navigation("SellerChatRooms");

                    b.Navigation("SentMessages");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
